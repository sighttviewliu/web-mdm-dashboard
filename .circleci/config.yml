version: 2

references:
  # Configuration
  workspace: &workspace
    ~/flyve

  docker_image: &docker_image
    kkarczmarczyk/node-yarn

  container_config: &container_config
    docker:
      - image: *docker_image
    working_directory: *workspace

  transifex_config: &transifex_config
    run:
      name: Configure transifex
      command: source ci/scripts/transife_config.sh

  transifex_pull: &transifex_pull
    run:
      name: Pull translations to transifex
      command: source ci/scripts/transife_pull.sh

  transifex_push: &transifex_push
    run:
      name: Push translations to transifex
      command: source ci/scripts/transife_push.sh

  # Dependencies
  system_install: &system_install
    run:
      name: Update system dependencies
      command: source ci/scripts/system_install.sh

  node_install: &node_install
    run:
      name: Install node dependencies
      command: source ci/scripts/node_install.sh

  python_install: &python_install
    run:
      name: Install python dependencies
      command: source ci/scripts/python_install.sh

  # Build application
  build_app: &build_app
    run:
      name: "Build application"
      command: |
        source ci/scripts/create_config_file.sh
        yarn build

jobs:
  build:
    <<: *container_config

    steps:
      - checkout
      - *system_install
      - *node_install
      - *python_install
      - *build_app

  test:
    <<: *container_config

    steps:
      - checkout
      - *system_install
      - *node_install
      - *python_install

      - run:
          name: "Start server in background"
          command: node scripts/start.js > ../yarn.log
          background: true

      - run:
          name: "Run tests"
          command: yarn test

      - run:
          name: "Run end to end tests"
          command: |
            until grep -m 1 'Compiled successfully!' ../yarn.log ; do true; done
            yarn test:cypress

      - run:
          name: "Run sonarwhal"
          command: |
            until grep -m 1 'Compiled successfully!' ../yarn.log ; do true; done
            yarn test:sonarwhal

      - run:
          name: "Validate HTML"
          command: |
            yarn build
            html5validator --root build/

      - store_artifacts:
          path: cypress/screenshots

  deploy:
    <<: *container_config

    steps:
      - checkout

      - *system_install
      - *node_install
      - *python_install

      - run:
          name: "Install Transifex Client and Files"
          command: source ci/scripts/transifex.sh

      - run:
          name: "Start server in background"
          command: node scripts/start.js > ../yarn.log
          background: true

      - run:
          name: "Take screenshots"
          command: |
            until grep -m 1 'Compiled successfully!' ../yarn.log ; do true; done
            yarn test:cypress

      - run:
          name: "Build application"
          command: |
            source ci/scripts/create_config_file.sh
            yarn build

      - run:
          name: "Create artifact"
          command: |
            mkdir /tmp/artifacts
            zip -r ./build.zip build/* > /tmp/artifacts/build.zip

      - store_artifacts:
          path: /tmp/artifacts
          destination: artifacts

      - run:
          name: "Configure GIT"
          command: source ci/scripts/git_config.sh

      - run:
          name: "Deploy application"
          command: source ci/scripts/deploy.sh

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - test
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - master
